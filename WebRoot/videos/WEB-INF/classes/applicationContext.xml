<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<context:component-scan base-package="com.gaze.biz"></context:component-scan>
	<context:component-scan base-package="com.gaze.entity"></context:component-scan>

   <context:property-placeholder location="classpath:database.properties"/>
    <!-- 一、使用druid数据库连接池注册数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
     <!-- 基础配置 -->
     <property name="url" value="${jdbc.url}"></property>
     <property name="driverClassName" value="${jdbc.driver}"></property>
     <property name="username" value="${jdbc.user}"></property>
     <property name="password" value="${jdbc.password}"></property>

     <!-- 关键配置 -->
     <!-- 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 --> 
     <property name="initialSize" value="3" /> 
     <!-- 最小连接池数量 --> 
     <property name="minIdle" value="2" /> 
     <!-- 最大连接池数量 --> 
     <property name="maxActive" value="15" />
     <!-- 配置获取连接等待超时的时间 --> 
     <property name="maxWait" value="10000" />

     <!-- 性能配置 -->
     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
     <property name="poolPreparedStatements" value="true" /> 
     <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

     <!-- 其他配置 -->
     <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
     <property name="timeBetweenEvictionRunsMillis" value="60000" />
     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
     <property name="minEvictableIdleTimeMillis" value="300000" />
     <!--   建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
               执行validationQuery检测连接是否有效。 -->
     <property name="testWhileIdle" value="true" />
     <!-- 这里建议配置为TRUE，防止取到的连接不可用 ,申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。--> 
     <property name="testOnBorrow" value="true" /> 
     <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
     <property name="testOnReturn" value="false" />
     </bean>
  
    <!-- sqlsessionFactory -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<property name="dataSource" ref="dataSource"></property>
<property name="configLocation" value="classpath:mybatis-config.xml"></property>
<property name="mapperLocations">
<list>
<value>classpath:com/gaze/dao/*.xml</value>
</list>
</property>
</bean>
<!--dao 扫描  创建dao实例，并自动放入spring容器，bean的名称，接口名首字母小写-->

<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> 
<property name="basePackage" value="com.gaze.dao"></property>
</bean>
<!-- 声明事务管理 -->
<!-- 配置事务管理 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<property name="dataSource" ref="dataSource"></property> 
</bean>
<tx:annotation-driven/>

 
</beans>